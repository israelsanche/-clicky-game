{"ast":null,"code":"import _objectSpread from \"/Users/israelsanchez/clicky-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/israelsanchez/clicky-game/src/pages/clickyGame.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"../components/FriendCard\";\nimport data from \"../friends.json\";\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport \"./style.css\";\nimport Nav from \"../components/Navbar\";\n\nclass clickyGame extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data,\n      score: 0,\n      topScore: 0\n    };\n\n    this.reset = data => {\n      const reset = data.map(item => _objectSpread({}, item, {\n        clicked: false\n      }));\n      return this.iconShuffle(reset);\n    };\n\n    this.iconShuffle = data => {\n      let i = data.length - 1;\n\n      while (i > 0) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = data[i];\n        data[i] = data[j];\n        data[j] = temp;\n        i--;\n      }\n\n      return data;\n    };\n\n    this.handleItemClick = id => {\n      let guessedCorrectly = false;\n      const newData = this.state.data.map(item => {\n        const newItem = _objectSpread({}, item);\n\n        if (newItem.id === id) {\n          if (!newItem.clicked) {\n            newItem.clicked = true;\n            guessedCorrectly = true;\n          }\n        }\n\n        return newItem;\n      });\n      guessedCorrectly ? this.correctAnswer(newData) : this.incorrectAnswer(newData);\n    };\n\n    this.correctAnswer = newData => {\n      const _this$state = this.state,\n            topScore = _this$state.topScore,\n            score = _this$state.score;\n      const newScore = score + 1;\n      const newTopScore = Math.max(newScore, topScore);\n      this.setState({\n        data: this.iconShuffle(newData),\n        score: newScore,\n        topScore: newTopScore\n      });\n    };\n\n    this.incorrectAnswer = data => {\n      alert(\"Incorrect Answer\");\n      this.setState({\n        data: this.reset(data),\n        score: 0\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: this.iconShuffle(this.state.data)\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"bg-light text-black bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Clickster-Game\"), React.createElement(Card.Img, {\n      className: \"jumbo-pic\",\n      src: \"https://cl.goliath.com/image/upload/t_tn,f_auto,q_auto,$h_375,$w_1050/go/2016/04/Looney-tunes-characters-the-free-542314-1050x375.jpg\",\n      alt: \"Card image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Card.Footer, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Click on an image to earn points, but don't click on any more than once! \")))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.data.map(item => React.createElement(FriendCard, {\n      key: item.id,\n      id: item.id,\n      shake: !this.state.score && this.state.topScore,\n      handleClick: this.handleItemClick,\n      image: item.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default clickyGame;","map":{"version":3,"sources":["/Users/israelsanchez/clicky-game/src/pages/clickyGame.js"],"names":["React","Component","FriendCard","data","Container","Card","Col","Row","Nav","clickyGame","state","score","topScore","reset","map","item","clicked","iconShuffle","i","length","j","Math","floor","random","temp","handleItemClick","id","guessedCorrectly","newData","newItem","correctAnswer","incorrectAnswer","newScore","newTopScore","max","setState","alert","componentDidMount","render","image"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCS,KADiC,GACzB;AACNP,MAAAA,IADM;AAENQ,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADyB;;AAAA,SAajCC,KAbiC,GAazBV,IAAI,IAAI;AACd,YAAMU,KAAK,GAAGV,IAAI,CAACW,GAAL,CAASC,IAAI,sBAAUA,IAAV;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,QAAb,CAAd;AACA,aAAO,KAAKC,WAAL,CAAiBJ,KAAjB,CAAP;AACD,KAhBgC;;AAAA,SAkBjCI,WAlBiC,GAkBnBd,IAAI,IAAI;AACpB,UAAIe,CAAC,GAAGf,IAAI,CAACgB,MAAL,GAAc,CAAtB;;AACA,aAAOD,CAAC,GAAG,CAAX,EAAc;AACZ,cAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,cAAMM,IAAI,GAAGrB,IAAI,CAACe,CAAD,CAAjB;AACAf,QAAAA,IAAI,CAACe,CAAD,CAAJ,GAAUf,IAAI,CAACiB,CAAD,CAAd;AACAjB,QAAAA,IAAI,CAACiB,CAAD,CAAJ,GAAUI,IAAV;AACAN,QAAAA,CAAC;AACF;;AACD,aAAOf,IAAP;AACD,KA5BgC;;AAAA,SA8BjCsB,eA9BiC,GA8BfC,EAAE,IAAI;AACtB,UAAIC,gBAAgB,GAAG,KAAvB;AACA,YAAMC,OAAO,GAAG,KAAKlB,KAAL,CAAWP,IAAX,CAAgBW,GAAhB,CAAoBC,IAAI,IAAI;AAC1C,cAAMc,OAAO,qBAAQd,IAAR,CAAb;;AACA,YAAIc,OAAO,CAACH,EAAR,KAAeA,EAAnB,EAAuB;AACrB,cAAI,CAACG,OAAO,CAACb,OAAb,EAAsB;AACpBa,YAAAA,OAAO,CAACb,OAAR,GAAkB,IAAlB;AACAW,YAAAA,gBAAgB,GAAG,IAAnB;AACD;AACF;;AACD,eAAOE,OAAP;AACD,OATe,CAAhB;AAUAF,MAAAA,gBAAgB,GACZ,KAAKG,aAAL,CAAmBF,OAAnB,CADY,GAEZ,KAAKG,eAAL,CAAqBH,OAArB,CAFJ;AAGD,KA7CgC;;AAAA,SA+CjCE,aA/CiC,GA+CjBF,OAAO,IAAI;AAAA,0BACG,KAAKlB,KADR;AAAA,YACjBE,QADiB,eACjBA,QADiB;AAAA,YACPD,KADO,eACPA,KADO;AAEzB,YAAMqB,QAAQ,GAAGrB,KAAK,GAAG,CAAzB;AACA,YAAMsB,WAAW,GAAGZ,IAAI,CAACa,GAAL,CAASF,QAAT,EAAmBpB,QAAnB,CAApB;AAEA,WAAKuB,QAAL,CAAc;AACZhC,QAAAA,IAAI,EAAE,KAAKc,WAAL,CAAiBW,OAAjB,CADM;AAEZjB,QAAAA,KAAK,EAAEqB,QAFK;AAGZpB,QAAAA,QAAQ,EAAEqB;AAHE,OAAd;AAKD,KAzDgC;;AAAA,SA2DjCF,eA3DiC,GA2Df5B,IAAI,IAAI;AACxBiC,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACA,WAAKD,QAAL,CAAc;AACZhC,QAAAA,IAAI,EAAE,KAAKU,KAAL,CAAWV,IAAX,CADM;AAEZQ,QAAAA,KAAK,EAAE;AAFK,OAAd;AAKD,KAlEgC;AAAA;;AAOjC0B,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,QAAL,CAAc;AAAEhC,MAAAA,IAAI,EAAE,KAAKc,WAAL,CAAiB,KAAKP,KAAL,CAAWP,IAA5B;AAAR,KAAd;AACD;;AA6DDmC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWC,KAAvB;AAA8B,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,SAAS,EAAC,WAApB;AAAgC,MAAA,GAAG,EAAC,uIAApC;AAA4K,MAAA,GAAG,EAAC,YAAhL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAHF,CADF,CADF,CADF,EAWE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKF,KAAL,CAAWP,IAAX,CAAgBW,GAAhB,CAAoBC,IAAI,IACvB,oBAAC,UAAD;AACA,MAAA,GAAG,EAAEA,IAAI,CAACW,EADV;AAEA,MAAA,EAAE,EAAEX,IAAI,CAACW,EAFT;AAGA,MAAA,KAAK,EAAE,CAAC,KAAKhB,KAAL,CAAWC,KAAZ,IAAqB,KAAKD,KAAL,CAAWE,QAHvC;AAIA,MAAA,WAAW,EAAE,KAAKa,eAJlB;AAKA,MAAA,KAAK,EAAEV,IAAI,CAACwB,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CAXF,CAFF,CADF;AAgCD;;AAvGgC;;AA0GnC,eAAe9B,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"../components/FriendCard\";\nimport data from \"../friends.json\";\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport \"./style.css\";\nimport Nav from \"../components/Navbar\";\n\nclass clickyGame extends Component {\n  state = {\n    data,\n    score: 0,\n    topScore: 0\n  };\n\n  componentDidMount() {\n    this.setState({ data: this.iconShuffle(this.state.data) });\n  }\n\n\n\n  reset = data => {\n    const reset = data.map(item => ({ ...item, clicked: false }));\n    return this.iconShuffle(reset);\n  };\n\n  iconShuffle = data => {\n    let i = data.length - 1;\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = data[i];\n      data[i] = data[j];\n      data[j] = temp;\n      i--;\n    }\n    return data;\n  };\n\n  handleItemClick = id => {\n    let guessedCorrectly = false;\n    const newData = this.state.data.map(item => {\n      const newItem = { ...item };\n      if (newItem.id === id) {\n        if (!newItem.clicked) {\n          newItem.clicked = true;\n          guessedCorrectly = true;\n        }\n      }\n      return newItem;\n    });\n    guessedCorrectly\n      ? this.correctAnswer(newData)\n      : this.incorrectAnswer(newData);\n  };\n\n  correctAnswer = newData => {\n    const { topScore, score } = this.state;\n    const newScore = score + 1;\n    const newTopScore = Math.max(newScore, topScore);\n\n    this.setState({\n      data: this.iconShuffle(newData),\n      score: newScore,\n      topScore: newTopScore\n    });\n  };\n\n  incorrectAnswer = data => {\n    alert(\"Incorrect Answer\");\n    this.setState({\n      data: this.reset(data),\n      score: 0\n      \n    });\n  };\n\n\n\n  render() {\n    return (\n      <div>\n        <Nav score={this.state.score} topScore={this.state.topScore} />\n        <Container>\n          <Row>\n            <Col md={12}>\n              <Card className=\"bg-light text-black bold\">\n                <Card.Header className=\"text-center\">Clickster-Game</Card.Header>\n                <Card.Img className=\"jumbo-pic\" src=\"https://cl.goliath.com/image/upload/t_tn,f_auto,q_auto,$h_375,$w_1050/go/2016/04/Looney-tunes-characters-the-free-542314-1050x375.jpg\" alt=\"Card image\" />\n                <Card.Footer className=\"text-center\">Click on an image to earn points, but don't click on any more than once! </Card.Footer>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n         \n            {this.state.data.map(item => (\n              <FriendCard\n              key={item.id}\n              id={item.id}\n              shake={!this.state.score && this.state.topScore}\n              handleClick={this.handleItemClick}\n              image={item.image}\n\n              />\n            ))}\n        \n          </Row>\n        </Container>\n\n      </div>\n    );\n  }\n}\n\nexport default clickyGame;\n"]},"metadata":{},"sourceType":"module"}