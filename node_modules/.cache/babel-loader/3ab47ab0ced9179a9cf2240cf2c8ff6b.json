{"ast":null,"code":"import _objectSpread from \"/Users/israelsanchez/clicky-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/israelsanchez/clicky-game/src/pages/clickyGame.js\";\nimport React, { Component } from \"react\"; // import API from \"../utils/API\";\n// import Card from \"../components/Card\";\n// import Alert from \"../components/Alert\";\n// import Row from \"../components/Row\";\n// import Col from \"../components/Col\";\n\nimport FriendCard from \"../components/FriendCard\"; // import Title from \"../components/Title\";\n\nimport data from \"../friends.json\";\nimport Container from 'react-bootstrap/Container'; // import ClickItem from \"../ClickItem\";\n\nimport Jumbotron from 'react-bootstrap/Jumbotron'; // import Image from 'react-bootstrap/Image'\n\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\n\nclass clickyGame extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data,\n      score: 0,\n      topScore: 0\n    };\n\n    this.handleCorrectGuess = newData => {\n      const _this$state = this.state,\n            topScore = _this$state.topScore,\n            score = _this$state.score;\n      const newScore = score + 1;\n      const newTopScore = Math.max(newScore, topScore);\n      this.setState({\n        data: this.shuffleData(newData),\n        score: newScore,\n        topScore: newTopScore\n      });\n    };\n\n    this.handleIncorrectGuess = data => {\n      this.setState({\n        data: this.resetData(data),\n        score: 0\n      });\n    };\n\n    this.resetData = data => {\n      const resetData = data.map(item => _objectSpread({}, item, {\n        clicked: false\n      }));\n      return this.shuffleData(resetData);\n    };\n\n    this.shuffleData = data => {\n      let i = data.length - 1;\n\n      while (i > 0) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = data[i];\n        data[i] = data[j];\n        data[j] = temp;\n        i--;\n      }\n\n      return data;\n    };\n\n    this.handleItemClick = id => {\n      let guessedCorrectly = false;\n      const newData = this.state.data.map(item => {\n        const newItem = _objectSpread({}, item);\n\n        if (newItem.id === id) {\n          if (!newItem.clicked) {\n            newItem.clicked = true;\n            guessedCorrectly = true;\n          }\n        }\n\n        return newItem;\n      });\n      guessedCorrectly ? this.handleCorrectGuess(newData) : this.handleIncorrectGuess(newData);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: this.shuffleData(this.state.data)\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"bg-dark text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: \"https://cl.goliath.com/image/upload/t_tn,f_auto,q_auto,$h_375,$w_1050/go/2016/04/Looney-tunes-characters-the-free-542314-1050x375.jpg\",\n      alt: \"Card image\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Card.ImgOverlay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Clicky-Game\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Click on an image to earn points, but don't click on any more than once! \"))))), React.createElement(Container, {\n      style: {\n        marginTop: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.data.map(item => React.createElement(FriendCard, {\n      id: item.id,\n      key: item.id,\n      name: item.name,\n      image: item.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default clickyGame;","map":{"version":3,"sources":["/Users/israelsanchez/clicky-game/src/pages/clickyGame.js"],"names":["React","Component","FriendCard","data","Container","Jumbotron","Card","Col","clickyGame","state","score","topScore","handleCorrectGuess","newData","newScore","newTopScore","Math","max","setState","shuffleData","handleIncorrectGuess","resetData","map","item","clicked","i","length","j","floor","random","temp","handleItemClick","id","guessedCorrectly","newItem","componentDidMount","render","marginTop","name","image"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;AAGA;AACA;;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCQ,KADiC,GACzB;AACNN,MAAAA,IADM;AAENO,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADyB;;AAAA,SAWjCC,kBAXiC,GAWZC,OAAO,IAAI;AAAA,0BACF,KAAKJ,KADH;AAAA,YACtBE,QADsB,eACtBA,QADsB;AAAA,YACZD,KADY,eACZA,KADY;AAE9B,YAAMI,QAAQ,GAAGJ,KAAK,GAAG,CAAzB;AACA,YAAMK,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASH,QAAT,EAAmBH,QAAnB,CAApB;AAEA,WAAKO,QAAL,CAAc;AACZf,QAAAA,IAAI,EAAE,KAAKgB,WAAL,CAAiBN,OAAjB,CADM;AAEZH,QAAAA,KAAK,EAAEI,QAFK;AAGZH,QAAAA,QAAQ,EAAEI;AAHE,OAAd;AAKD,KArBgC;;AAAA,SAuBjCK,oBAvBiC,GAuBVjB,IAAI,IAAI;AAC7B,WAAKe,QAAL,CAAc;AACZf,QAAAA,IAAI,EAAE,KAAKkB,SAAL,CAAelB,IAAf,CADM;AAEZO,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID,KA5BgC;;AAAA,SA8BjCW,SA9BiC,GA8BrBlB,IAAI,IAAI;AAClB,YAAMkB,SAAS,GAAGlB,IAAI,CAACmB,GAAL,CAASC,IAAI,sBAAUA,IAAV;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,QAAb,CAAlB;AACA,aAAO,KAAKL,WAAL,CAAiBE,SAAjB,CAAP;AACD,KAjCgC;;AAAA,SAmCjCF,WAnCiC,GAmCnBhB,IAAI,IAAI;AACpB,UAAIsB,CAAC,GAAGtB,IAAI,CAACuB,MAAL,GAAc,CAAtB;;AACA,aAAOD,CAAC,GAAG,CAAX,EAAc;AACZ,cAAME,CAAC,GAAGX,IAAI,CAACY,KAAL,CAAWZ,IAAI,CAACa,MAAL,MAAiBJ,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,cAAMK,IAAI,GAAG3B,IAAI,CAACsB,CAAD,CAAjB;AACAtB,QAAAA,IAAI,CAACsB,CAAD,CAAJ,GAAUtB,IAAI,CAACwB,CAAD,CAAd;AACAxB,QAAAA,IAAI,CAACwB,CAAD,CAAJ,GAAUG,IAAV;AACAL,QAAAA,CAAC;AACF;;AACD,aAAOtB,IAAP;AACD,KA7CgC;;AAAA,SA+CjC4B,eA/CiC,GA+CfC,EAAE,IAAI;AACtB,UAAIC,gBAAgB,GAAG,KAAvB;AACA,YAAMpB,OAAO,GAAG,KAAKJ,KAAL,CAAWN,IAAX,CAAgBmB,GAAhB,CAAoBC,IAAI,IAAI;AAC1C,cAAMW,OAAO,qBAAQX,IAAR,CAAb;;AACA,YAAIW,OAAO,CAACF,EAAR,KAAeA,EAAnB,EAAuB;AACrB,cAAI,CAACE,OAAO,CAACV,OAAb,EAAsB;AACpBU,YAAAA,OAAO,CAACV,OAAR,GAAkB,IAAlB;AACAS,YAAAA,gBAAgB,GAAG,IAAnB;AACD;AACF;;AACD,eAAOC,OAAP;AACD,OATe,CAAhB;AAUAD,MAAAA,gBAAgB,GACZ,KAAKrB,kBAAL,CAAwBC,OAAxB,CADY,GAEZ,KAAKO,oBAAL,CAA0BP,OAA1B,CAFJ;AAGD,KA9DgC;AAAA;;AAOjCsB,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,QAAL,CAAc;AAAEf,MAAAA,IAAI,EAAE,KAAKgB,WAAL,CAAiB,KAAKV,KAAL,CAAWN,IAA5B;AAAR,KAAd;AACD;;AA0DDiC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAC,uIAAd;AAAsJ,MAAA,GAAG,EAAC,YAA1J;AAAuK,MAAA,KAAK,MAA5K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD,CAAM,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAFF,CAFF,CADA,CADA,CADF,EAaE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAK5B,KAAL,CAAWN,IAAX,CAAgBmB,GAAhB,CAAoBC,IAAI,IACvB,oBAAC,UAAD;AACE,MAAA,EAAE,EAAEA,IAAI,CAACS,EADX;AAEE,MAAA,GAAG,EAAET,IAAI,CAACS,EAFZ;AAGE,MAAA,IAAI,EAAET,IAAI,CAACe,IAHb;AAIE,MAAA,KAAK,EAAEf,IAAI,CAACgB,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CAbF,CADF;AA6BD;;AAjGgC;;AAoGnC,eAAe/B,UAAf","sourcesContent":["import React, { Component } from \"react\";\n// import API from \"../utils/API\";\n// import Card from \"../components/Card\";\n// import Alert from \"../components/Alert\";\n\n\n// import Row from \"../components/Row\";\n// import Col from \"../components/Col\";\nimport FriendCard from \"../components/FriendCard\";\n\n// import Title from \"../components/Title\";\nimport data from \"../friends.json\";\nimport Container from 'react-bootstrap/Container'\n// import ClickItem from \"../ClickItem\";\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n// import Image from 'react-bootstrap/Image'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\n\nclass clickyGame extends Component {\n  state = {\n    data,\n    score: 0,\n    topScore: 0\n  };\n\n  componentDidMount() {\n    this.setState({ data: this.shuffleData(this.state.data) });\n  }\n\n  handleCorrectGuess = newData => {\n    const { topScore, score } = this.state;\n    const newScore = score + 1;\n    const newTopScore = Math.max(newScore, topScore);\n\n    this.setState({\n      data: this.shuffleData(newData),\n      score: newScore,\n      topScore: newTopScore\n    });\n  };\n\n  handleIncorrectGuess = data => {\n    this.setState({\n      data: this.resetData(data),\n      score: 0\n    });\n  };\n\n  resetData = data => {\n    const resetData = data.map(item => ({ ...item, clicked: false }));\n    return this.shuffleData(resetData);\n  };\n\n  shuffleData = data => {\n    let i = data.length - 1;\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = data[i];\n      data[i] = data[j];\n      data[j] = temp;\n      i--;\n    }\n    return data;\n  };\n\n  handleItemClick = id => {\n    let guessedCorrectly = false;\n    const newData = this.state.data.map(item => {\n      const newItem = { ...item };\n      if (newItem.id === id) {\n        if (!newItem.clicked) {\n          newItem.clicked = true;\n          guessedCorrectly = true;\n        }\n      }\n      return newItem;\n    });\n    guessedCorrectly\n      ? this.handleCorrectGuess(newData)\n      : this.handleIncorrectGuess(newData);\n  };\n\n\n\n\n  render() {\n    return (\n      <div>\n        <Jumbotron >\n        <Col md=\"12\">\n        <Card className=\"bg-dark text-white\">\n          <Card.Img src=\"https://cl.goliath.com/image/upload/t_tn,f_auto,q_auto,$h_375,$w_1050/go/2016/04/Looney-tunes-characters-the-free-542314-1050x375.jpg\" alt=\"Card image\" fluid />\n          <Card.ImgOverlay>\n            <Card.Title>Clicky-Game</Card.Title>\n            <Card.Text>Click on an image to earn points, but don't click on any more than once! </Card.Text>\n           \n          </Card.ImgOverlay>\n        </Card>\n        </Col>\n         </Jumbotron>\n        <Container style={{ marginTop: 30 }}>\n\n          {this.state.data.map(item => (\n            <FriendCard\n              id={item.id}\n              key={item.id}\n              name={item.name}\n              image={item.image}\n\n            />\n          ))}\n        </Container>\n\n      </div>\n    );\n  }\n}\n\nexport default clickyGame;\n"]},"metadata":{},"sourceType":"module"}